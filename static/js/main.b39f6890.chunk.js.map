{"version":3,"sources":["logo.module.css","Calendly.tsx","LogoIcon.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","svg","grow","Calendly","React","createElement","className","InlineWidget","url","ConcentricHexagons","_ref","sideLength","svgRef","useRef","useEffect","d3","current","selectAll","remove","centerX","centerY","Math","sqrt","outerRadius","innerRadius","hexagonGroup","append","attr","concat","hexagonGenerator","x","d","i","cos","PI","y","sin","curve","ref","styles","overflow","App","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","password","handleChange","bind","_assertThisInitialized","_inherits","_createClass","key","value","event","target","setState","document","getElementsByTagName","setAttribute","id","aria-hidden","type","onChange","Segment","vertical","textAlign","Container","as","Header","inverted","Menu","borderless","compact","Item","active","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b39f6890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"logo_svg__1wMBx\",\"grow\":\"logo_grow__3waBp\"};","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { InlineWidget } from \"react-calendly\";\n\n\nfunction Calendly() {\n    return (\n        <div className=\"calendly\">\n          <InlineWidget url=\"https://calendly.com/stutoring?hide_gdpr_banner=1\" />\n        </div>\n    );\n  }\n  \n  export default Calendly;","import  Component  from 'react';\nimport styles from \"./logo.module.css\"; \nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst ConcentricHexagons = ({ sideLength }) => {\n    const svgRef = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // Clear any existing content\n    svg.selectAll('*').remove();\n\n    // Calculate the necessary values\n    const width = sideLength * 6;\n    const height = sideLength * Math.sqrt(3);\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const outerRadius = sideLength;\n    const innerRadius = sideLength / 2;\n\n    // Create a group element to hold the hexagons\n    const hexagonGroup = svg.append('g').attr('transform', `translate(${centerX}, ${centerY})`);\n\n    // Define the hexagon generator\n    const hexagonGenerator = d3\n      .line()\n      .x((d, i) => outerRadius * Math.cos((2 * Math.PI * i) / 6))\n      .y((d, i) => outerRadius * Math.sin((2 * Math.PI * i) / 6))\n      .curve(d3.curveLinearClosed);\n\n    // Draw the outer hexagon\n    hexagonGroup\n      .append('path')\n      .attr('d', hexagonGenerator(d3.range(6)))\n      .attr('stroke', 'white')\n      .attr('stroke-width', 1);\n\n    // Draw the inner hexagon\n    hexagonGroup\n      .append('path')\n      .attr('d', hexagonGenerator(d3.range(6)))\n      .attr('stroke', 'white')\n      .attr('stroke-width', 1)\n      .attr('transform', `scale(${innerRadius / outerRadius})`);\n\n    \n\n  }, [sideLength]);\n\n  return <svg ref={svgRef} className={styles.svg} overflow=\"visible\"/>;\n};\n\nexport default ConcentricHexagons;\n  ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Container, Header, Menu, Segment } from \"semantic-ui-react\";\nimport Calendly from './Calendly'\nimport ConcentricHexagons from './LogoIcon'\n\n\n/* Home Page */\n\nclass App extends React.Component<{},any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n        password: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event: any) {\n    if (event.target.value == \"open\") {\n      this.setState({password: event.target.value});\n    }\n  }\n\n  render() {\n    if (this.state.password == \"\") {\n      var bodyTag = document.getElementsByTagName(\"body\")[0];\n      bodyTag.setAttribute('style', 'overflow: auto;');\n      return (\n        <div className=\"App\" id=\"app\">\n          <div id=\"container\" aria-hidden>\n           \n            <div id=\"color-one\" />\n            <div id=\"color-two\" />\n            <div id=\"color-three\" />\n            \n          </div>\n           <div className=\"secret\">\n            <form>\n                <label>\n                <input type=\"text\" onChange={this.handleChange} />\n                </label>\n            </form>\n        </div>\n        </div>\n      )\n    } \n    \n    return (\n        <div className=\"App\" id=\"app\">\n          <div id=\"container\" aria-hidden>\n            <div id=\"color-one\" />\n            <div id=\"color-two\" />\n            <div id=\"color-three\" />\n          </div>\n          <div>\n            <Segment vertical textAlign=\"center\">\n              <Container as=\"nav\">\n                <Header inverted as=\"h1\">\n                  <div className=\"svgBox\">\n                  <ConcentricHexagons sideLength={30} /> \n                    {/* <LogoIcon/> S Tutoring */}\n                  </div>\n                \n                </Header>\n                <Menu borderless compact inverted>\n                  <Menu.Item>How it Works</Menu.Item>\n                  <Menu.Item active>Booking</Menu.Item>\n                </Menu>\n              </Container>\n              <Calendly />\n\n            </Segment>\n          </div>\n          \n          \n\n              {/* <Header inverted as=\"h1\">\n                Cover your page.\n              </Header> */}\n      \n\n            {/* <Segment inverted vertical as=\"footer\">\n              Built by S Tutoring Team\n            </Segment> */}\n        </div>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}